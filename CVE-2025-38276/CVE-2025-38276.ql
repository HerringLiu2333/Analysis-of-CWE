/**
 * @name CVE-2025-38276
 * @description Detects the incorrect use of `xas_pause` in a loop waiting for a locked XArray entry.
 *              `xas_pause` incorrectly advances the iterator, causing the entry being waited on to be skipped.
 *              This can lead to data structure inconsistencies, particularly during file truncation operations.
 * @kind problem
 * @problem.severity warning
 * @precision high
 * @id cpp/incorrect-xarray-pause-on-wait
 * @tags security
 *       correctness
 *       concurrency
 *       race-condition
 *       external/cwe/cwe-362
 * @patch-commit dd59137bfe70cf3646021b4721e430213b9c71bd
 * @source-file fs/dax.c
 * @affected-function wait_entry_unlocked_exclusive
 * @kernel-config CONFIG_FS_DAX
 * @vulnerability-type race-condition
 * @patch-diff |
 *      @@ -257,7 +257,7 @@ static void *wait_entry_unlocked_exclusive(struct xa_state *xas, void *entry)
 *      		wq = dax_entry_waitqueue(xas, entry, &ewait.key);
 *      		prepare_to_wait_exclusive(wq, &ewait.wait,
 *      					TASK_UNINTERRUPTIBLE);
 *      -		xas_pause(xas);
 *      +		xas_reset(xas);
 *      		xas_unlock_irq(xas);
 *      		schedule();
 *      		finish_wait(wq, &ewait.wait);
 * @references https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2025-38276
 * @remediation 
 */
import cpp

from FunctionCall call, Function f
where
  // 目标函数是 xas_pause
  call.getTarget().hasName("xas_pause") and
  
  // 限定在 fs/dax.c 文件里
  call.getFile().getRelativePath() = "dax.c" and
  
  // 限定在 wait_entry_unlocked_exclusive 函数里
  f.getName() = "wait_entry_unlocked_exclusive" and
  call.getEnclosingFunction() = f
select call
