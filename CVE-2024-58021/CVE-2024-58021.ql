/**
 * @name CVE-2024-58021
 * @description Detects uses of devm_kasprintf (and similar allocation/formatting helpers)
 *  without checking for a NULL return in winwing_init_led(), which can lead to
 *  NULL pointer dereference and system instability on allocation failure paths.
 * @kind problem
 * @problem.severity error
 * @precision high
 * @id cpp/unchecked-null-return
 * @tags 
 *  security
 *  correctness
 *  reliability
 *  null-dereference
 *  external/cwe/cwe-476
 *  external/cwe/cwe-690
 *  external/cwe/cwe-252
 * @patch-commit b99dbdee8a89c44d03ae9830ab19f31e124a3f32
 * @source-file drivers/hid/hid-winwing.c
 * @affected-function winwing_init_led
 * @kernel-config N/A
 * @vulnerability-type null-pointer-dereference
 * @patch-diff |
 *  diff --git a/drivers/hid/hid-winwing.c b/drivers/hid/hid-winwing.c
 *  index 831b760c66ea72…d4afbbd2780797 100644
 *  --- a/drivers/hid/hid-winwing.c
 *  +++ b/drivers/hid/hid-winwing.c
 *  @@ -106,6 +106,8 @@ static int winwing_init_led(struct hid_device *hdev,
 *  "%s::%s",
 *    dev_name(&input->dev),
 *    info->led_name);
 *  + if (!led->cdev.name)
 *  + return -ENOMEM;
 *
 *    ret = devm_led_classdev_register(&hdev->dev, &led->cdev);
 *    if (ret)
 * @references https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/?id=b99dbdee8a89c44d03ae9830ab19f31e124a3f32
 * @remediation Always check the return value of allocation/formatting helpers (e.g., devm_kasprintf, kasprintf, kmalloc)
 *  and handle failures early by returning -ENOMEM or unwinding resources as appropriate before dereferencing.
 * @patch-description |
 *  HID: winwing: Add NULL check in winwing_init_led()
 *  [ Upstream commit 45ab5166a82d038c898985b0ad43ead69c1f9573 ]
 *  
 *  devm_kasprintf() can return a NULL pointer on failure,but this
 *  returned value in winwing_init_led() is not checked.
 *  Add NULL check in winwing_init_led(), to handle kernel NULL
 *  pointer dereference error.
 *
 *  Fixes: 266c990debad ("HID: Add WinWing Orion2 throttle support")
 */

import cpp

/*
 * 检测winwing_init_led函数中devm_kasprintf()使用中的NULL指针解引用漏洞
 * 该查询用于识别devm_kasprintf()返回值直接赋值给led->cdev.name字段而未进行NULL检查的情况
 * This query identifies cases where devm_kasprintf() return value is assigned
 * to led->cdev.name field without proper NULL check in winwing_init_led function
 */


from
  Function f,  AssignExpr ae, FunctionCall fc  // 赋值表达式
where
  // 限制在winwing_init_led函数内
  f.getName() = "winwing_init_led" and
  ae.getEnclosingFunction() = f and
  fc.getTarget().getName() = "devm_led_classdev_register" and
  fc.getEnclosingFunction() = f and
  ae.getRValue() = fc and
  // 在赋值后没有找到NULL检查
  not exists(IfStmt ifstmt |
    ifstmt.getEnclosingBlock() = ae.getEnclosingBlock() and
    ifstmt.getLocation().getStartLine() < ae.getLocation().getStartLine()
  )
  
select
  ae,
  "Potential NULL pointer dereference: devm_kasprintf() return value assigned to led->cdev.name without NULL check in winwing_init_led()"