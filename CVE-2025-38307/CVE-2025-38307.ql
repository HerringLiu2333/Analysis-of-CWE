import cpp
import semmle.code.cpp.dataflow.TaintTracking
import semmle.code.cpp.dataflow.DataFlow

// 定义array[1]的访问
class ResourceMaskAccess extends ArrayExpr {
  ResourceMaskAccess() {
    // 确保是访问array[1]
    exists(Literal i | 
      i = this.getArrayOffset() and
      i.getValue().toInt() = 1
    )
  }
}

// 定义num_elems的零值检查
class NumElemsCheck extends IfStmt {
  Variable numElems;
  
  NumElemsCheck() {
    // 匹配 if(!num_elems) 模式
    exists(NotExpr ne |
      ne = this.getCondition() and
      numElems = ne.getOperand().(VariableAccess).getTarget() and
      numElems.getName() = "num_elems"
    )
  }
}

from ResourceMaskAccess access, Function f
where
  // 在trace_control_write函数中
  f = access.getEnclosingFunction() and
  f.getName() = "trace_control_write" and
  f.getFile().getBaseName() = "debugfs.c" and
  
  // array[1]的访问没有前置的num_elems检查
  not exists(NumElemsCheck check |
    check.getEnclosingFunction() = f and
    check.getLocation().getStartLine() < access.getLocation().getStartLine()
  )

select access, 
  "在访问array[1]前未检查num_elems是否为0，可能导致越界访问。应添加 if(!num_elems) 检查"