/**
 * @name CVE-2025-38263
 * @description Detects a potential NULL pointer dereference in the bcache module's `cache_set_flush` function.
 *              During a failed cache set registration, the error-handling path may process a partially initialized
 *              data structure, leading to a system crash when a pointer is used without a prior NULL check.
 * @kind problem
 * @problem.severity error
 * @precision high
 * @id cpp/bcache-unprotected-dereference
 * @tags security
 *       correctness
 *       kernel
 *       null-pointer
 *       external/cwe/cwe-476
 * @patch-commit 914873bc7df913db988284876c16257e6ab772c6
 * @source-file drivers/md/bcache/super.c
 * @affected-function cache_set_flush
 * @kernel-config CONFIG_BCACHE
 * @vulnerability-type null-pointer-dereference
 * @patch-diff |
 *     @@ -1732,7 +1732,12 @@ static CLOSURE_CALLBACK(cache_set_unregister)
 *      			mutex_unlock(&b->write_lock);
 *      		}
 *      
 *     -	if (ca->alloc_thread)
 *     +	/*
 *     +	 * If the register_cache_set() call to bch_cache_set_alloc() failed,
 *     +	 * ca has not been assigned a value and return error.
 *     +	 * So we need check ca is not NULL during bch_cache_set_unregister().
 *     +	 *
 *     +	if (ca && ca->alloc_thread)
 *      		kthread_stop(ca->alloc_thread);
 *      
 *      	if (c->journal.cur) {
 * @references https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2025-38263
 * @remediation
 */
import cpp
import semmle.code.cpp.controlflow.Guards

/**
 * 核心谓词：判断对变量 `v` 的字段访问 `deref` 是否被一个有效的空指针检查所保护。
 *
 * 使用 `ensuresEq(..., false)` 来判断一个 Guard 是否确保了变量不为 NULL。
 */
predicate isProtectedByNullCheck(FieldAccess deref, Variable v) {
  exists(GuardCondition nullCheck |
    // nullCheck.ensuresEq(v.getAnAccess(), 0, ..., false) 的含义是：
    // Guard `nullCheck` 确保了 `v` 的值不等于(false) 0 (NULL)，
    // 在 `deref` 所在的 BasicBlock 中。
    nullCheck.ensuresEq(v.getAnAccess(), 0, deref.getBasicBlock(), false)
  )
}

from
  Function cacheSetFlush,
  LocalVariable ca,
  FieldAccess deref
where
  cacheSetFlush.hasName("cache_set_flush") and
  cacheSetFlush.getFile().getRelativePath().matches("drivers/md/bcache/super.c") and

  ca.getFunction() = cacheSetFlush and
  ca.hasName("ca") and

  deref.getQualifier().(VariableAccess).getTarget() = ca and

  not isProtectedByNullCheck(deref, ca)
select deref, "对变量 '" + ca.getName() + "' 的解引用缺少空指针检查。"
