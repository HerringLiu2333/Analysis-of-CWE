import cpp

// 全局数组变量
class GlobalArray extends GlobalVariable {
  GlobalArray() {
    this.getType() instanceof ArrayType
  }
}

// 可能在并发环境中调用的函数
class ConcurrentFunction extends Function {
  ConcurrentFunction() {
    // 从ioctl处理函数调用的函数
    exists(FunctionCall fc |
      fc.getTarget() = this and
      fc.getEnclosingFunction().getName().matches("%ioctl%")
    ) or
    // 包含lockdep断言的函数（表明它们期望锁保护）
    exists(FunctionCall fc |
      fc.getTarget().getName() = "lockdep_assert_held" and
      fc.getEnclosingFunction() = this
    ) or
    // 访问全局状态且没有明显锁保护的函数
    this.getName().matches("lec_%") or
    this.getName().matches("lecd_%")
  }
}

// 访问全局数组的表达式
class GlobalArrayAccess extends Expr {
  GlobalArray ga;
  
  GlobalArrayAccess() {
    (
      // 直接数组访问：dev_lec[i]
      this.(ArrayExpr).getArrayBase().(VariableAccess).getTarget() = ga or
      // 对数组元素赋值：dev_lec[i] = ...
      this.(AssignExpr).getLValue().(ArrayExpr).getArrayBase().(VariableAccess).getTarget() = ga or
      // 在其他上下文中读取数组元素
      this.(VariableAccess).getTarget() = ga
    )
  }
  
  GlobalArray getGlobalArray() { result = ga }
}

// 检查函数或其调用链是否有适当的锁保护
predicate hasLockProtection(Function f) {
  // 函数包含mutex_lock调用
  exists(FunctionCall fc |
    fc.getEnclosingFunction() = f and
    fc.getTarget().getName().matches("%mutex_lock%")
  ) or
  // 函数有lockdep断言
  exists(FunctionCall fc |
    fc.getEnclosingFunction() = f and
    fc.getTarget().getName() = "lockdep_assert_held"
  ) or
  // 函数只从受保护的上下文中调用
  forex(FunctionCall caller |
    caller.getTarget() = f |
    hasLockProtection(caller.getEnclosingFunction())
  )
}

from GlobalArrayAccess access, ConcurrentFunction func, GlobalArray ga
where
  access.getEnclosingFunction() = func and
  access.getGlobalArray() = ga and
  not hasLockProtection(func) and
  // 排除在分配后错误处理中的访问情况
  not exists(FunctionCall fc |
    fc.getTarget().getName().matches("%alloc%") and
    fc.getEnclosingFunction() = func and
    access.(AssignExpr).getRValue().(FunctionCall) = fc
  )
select access, 
  "在并发函数 '" + func.getName() + 
  "' 中对全局数组 '" + ga.getName() + 
  "' 的无保护访问可能导致竞争条件"