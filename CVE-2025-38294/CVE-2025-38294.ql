import cpp
import semmle.code.cpp.dataflow.new.DataFlow
import semmle.code.cpp.controlflow.Guards

from FunctionCall assignCall, IfStmt ifStmt, FunctionCall warnCall, Variable ar
where
  // 定位到目标函数
  exists(Function f | 
    f.getName() = "ath12k_mac_op_assign_vif_chanctx" and
    assignCall.getEnclosingFunction() = f and
    ifStmt.getEnclosingFunction() = f and
    warnCall.getEnclosingFunction() = f
  ) and
  // 匹配赋值调用
  assignCall.getTarget().getName() = "ath12k_mac_assign_vif_to_vdev" and
  // 匹配if条件判断
  ifStmt.getCondition().(NotExpr).getOperand() = ar.getAnAccess() and
  // 匹配warn调用
  warnCall.getTarget().getName() = "__ath12k_warn" and
  // 确保warn调用在if分支内
  warnCall.getEnclosingStmt().getParent*() = ifStmt.getThen() and
  warnCall.getArgument(0).(PointerFieldAccess).getQualifier().(PointerFieldAccess).getQualifier().(VariableAccess).getQualifier().toString() = "arvif"
select warnCall