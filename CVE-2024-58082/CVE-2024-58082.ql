/**
 * @name CVE-2024-58082
 * @description of_find_device_by_node() returns NULL on failure, not error pointers. Using IS_ERR()
 *  to check its result in npcm_video_ece_init() leads to incorrect error handling and
 *  wrong return codes. The fix checks for NULL and returns -ENODEV.
 * @kind problem
 * @problem.severity error
 * @precision high
 * @id cpp/null-vs-is-err-check-of-find-device
 * @tags
 *  correctness
 *  reliability
 *  null-dereference
 *  device-tree
 *  external/cwe/cwe-476
 *  external/cwe/cwe-252
 * @patch-commit c4b7779abc6633677e6edb79e2809f4f61fde157
 * @source-file drivers/media/platform/nuvoton/npcm-video.c
 * @affected-function npcm_video_ece_init
 * @vulnerability-type incorrect-error-checking
 * @patch-diff |
 *  diff --git a/drivers/media/platform/nuvoton/npcm-video.c b/drivers/media/platform/nuvoton/npcm-video.c
 *  index 4f5d75645b2bb9…024cd8ee17098d 100644
 *  --- a/drivers/media/platform/nuvoton/npcm-video.c
 *  +++ b/drivers/media/platform/nuvoton/npcm-video.c
 *  @@ -1665,9 +1665,9 @@ static int npcm_video_ece_init(struct npcm_video *video)
 *  dev_info(dev, “Support HEXTILE pixel format\n”);
 *
 *    ece_pdev = of_find_device_by_node(ece_node);
 *  - if (IS_ERR(ece_pdev)) {
 *  + if (!ece_pdev) {
 *    dev_err(dev, “Failed to find ECE device\n”);
 *  - return PTR_ERR(ece_pdev);
 *  + return -ENODEV;
 *  }
 *    of_node_put(ece_node);
 * @references https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/?id=c4b7779abc6633677e6edb79e2809f4f61fde157
 * @remediation For APIs that return NULL on failure (e.g., of_find_device_by_node), check for NULL
 *  rather than using IS_ERR(). Return a suitable errno (e.g., -ENODEV) and ensure any
 *  DT node references are released with of_node_put() as appropriate.
 * @patch-description |
 *  media: nuvoton: Fix an error check in npcm_video_ece_init()
 *  When function of_find_device_by_node() fails, it returns NULL instead of
 *  an error code. So the corresponding error check logic should be modified
 *  to check whether the return value is NULL and set the error code to be
 *  returned as -ENODEV.
 *  
 *  Fixes: 46c15a4ff1f4 ("media: nuvoton: Add driver for NPCM video capture and encoding engine")
 */



import cpp

/*
 * 检测Nuvoton视频驱动中的错误检查问题
 * 该查询用于识别错误使用IS_ERR()检查of_find_device_by_node()返回值的情况
 * of_find_device_by_node()返回NULL表示失败，而不是错误指针，应该使用NULL检查
 * This query identifies incorrect usage of IS_ERR() to check of_find_device_by_node() return value
 * of_find_device_by_node() returns NULL on failure, not error pointers
 */

// 检查是否为npcm_video_ece_init函数
// Check if it's npcm_video_ece_init function
predicate isNpcmVideoEceInitFunction(Function f) {
  f.getName() = "npcm_video_ece_init"
}

// 检查是否为of_find_device_by_node函数调用
// Check if it's of_find_device_by_node function call
predicate isOfFindDeviceByNodeCall(FunctionCall fc) {
  fc.getTarget().getName() = "of_find_device_by_node"
}

// 检查是否为IS_ERR函数调用
// Check if it's IS_ERR function call
predicate isIsErrCall(FunctionCall fc) {
  fc.getTarget().getName() = "IS_ERR"
}



// 检查IS_ERR调用是否检查of_find_device_by_node的返回值
// Check if IS_ERR call checks of_find_device_by_node return value
predicate isIsErrCheckingOfFindDevice(FunctionCall isErrCall, AssignExpr ece_pdev) {
  ece_pdev.getLValue().toString() = isErrCall.getArgument(0).toString()
}



from
  Function f,
  FunctionCall ofFindCall,  // of_find_device_by_node调用
  FunctionCall isErrCall,    // IS_ERR调用
  AssignExpr ece_pdev
where
  // 限制在npcm_video_ece_init函数内
  isNpcmVideoEceInitFunction(f) and
  ofFindCall.getEnclosingFunction() = f and
  isErrCall.getEnclosingFunction() = f and
  // 查找of_find_device_by_node调用
  isOfFindDeviceByNodeCall(ofFindCall) and
  // 查找IS_ERR调用
  isIsErrCall(isErrCall) and
  // IS_ERR检查的是of_find_device_by_node的返回值
  isIsErrCheckingOfFindDevice(isErrCall, ece_pdev) and
  ece_pdev.getRValue() = ofFindCall
select
  isErrCall,
  "Potential NULL vs IS_ERR() bug: of_find_device_by_node() returns NULL on failure, not error pointers. Use NULL check instead of IS_ERR()."