/**
 * @name CVE-2025-38495: HID报告缓冲区分配不足漏洞
 * @description 检测形如"u32 len = hid_report_len(report) + 7;"的赋值语句是否缺少"(report->id == 0)"条件
 * @kind problem
 * @problem.severity error
 * @security-severity 7.5
 * @precision high
 * @id cpp/cve-2025-38495-hid-buffer-underallocation
 * @tags security
 *       external/cwe/cwe-131
 *       external/cwe/cwe-120
 */

import cpp

/**
 * 表示对hid_report_len函数的调用
 */
class HidReportLenCall extends FunctionCall {
  HidReportLenCall() {
    this.getTarget().getName() = "hid_report_len"
  }
}

/**
 * 表示访问report->id字段的表达式
 */
class ReportIdAccess extends FieldAccess {
  ReportIdAccess() {
    this.getTarget().getName() = "id"
  }
}

/**
 * 检测变量声明赋值语句中缺少report->id == 0条件的情况
 */
predicate isVulnerableVariableDeclaration(Variable lenVar, HidReportLenCall reportLenCall, Literal constant) {
  // 变量是u32类型且名称包含"len"
  lenVar.getType().getName() = "u32" and
  lenVar.getName().toLowerCase().matches("%len%") and
  
  // 变量的初始化表达式是加法运算
  exists(AddExpr addExpr |
    addExpr = lenVar.getInitializer().getExpr() and
    
    // 加法的一个操作数是hid_report_len调用
    addExpr.getAnOperand() = reportLenCall and
    
    // 加法的另一个操作数是常数7
    addExpr.getAnOperand() = constant and
    constant.getValue() = "7"
  ) and
  
  // 确认在同一函数中没有检查report->id == 0的条件
  not exists(EqualityOperation eqOp, ReportIdAccess idAccess |
    eqOp.getAnOperand() = idAccess and
    eqOp.getAnOperand().getValue() = "0"
  )
}

/**
 * 检测赋值语句中缺少report->id == 0条件的情况
 */
predicate isVulnerableAssignment(AssignExpr assignExpr, HidReportLenCall reportLenCall, Literal constant) {
  // 赋值表达式的右侧是加法运算
  exists(AddExpr addExpr |
    addExpr = assignExpr.getRValue() and
    
    // 加法的一个操作数是hid_report_len调用
    addExpr.getAnOperand() = reportLenCall and
    
    // 加法的另一个操作数是常数7
    addExpr.getAnOperand() = constant and
    constant.getValue() = "7"
  ) and
  
  // 左侧变量名包含"len"
  exists(Variable v |
    assignExpr.getLValue() = v.getAnAccess() and
    v.getName().toLowerCase().matches("%len%")
  ) and
  
  // 确认在同一函数中没有检查report->id == 0的条件
  not exists(EqualityOperation eqOp, ReportIdAccess idAccess |
    eqOp.getEnclosingFunction() = assignExpr.getEnclosingFunction() and
    eqOp.getAnOperand() = idAccess and
    eqOp.getAnOperand().getValue() = "0"
  )
}

from Expr vulnerableExpr, HidReportLenCall reportLenCall, Literal constant, string message
where 
  (
    // 检测变量声明中的漏洞
    exists(Variable lenVar |
      isVulnerableVariableDeclaration(lenVar, reportLenCall, constant) and
      vulnerableExpr = lenVar.getInitializer().getExpr() and
      message = "变量 '" + lenVar.getName() + "' 的初始化表达式 'hid_report_len(report) + 7' 缺少对 '(report->id == 0)' 条件的处理，可能导致当报告ID为0时缓冲区分配不足一个字节。"
    )
    or
    // 检测赋值表达式中的漏洞  
    (
      isVulnerableAssignment(vulnerableExpr, reportLenCall, constant) and
      message = "赋值表达式 'hid_report_len(report) + 7' 缺少对 '(report->id == 0)' 条件的处理，可能导致当报告ID为0时缓冲区分配不足一个字节。"
    )
  )
select vulnerableExpr, message