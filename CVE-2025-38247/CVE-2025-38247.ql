import cpp
import semmle.code.cpp.controlflow.BasicBlocks

from Function f, FunctionCall alloc_call, ReturnStmt early_return
where
  // 确定“分配点”和它所在的函数
  alloc_call.getTarget().hasGlobalName("wants_mount_setattr") and
  f = alloc_call.getEnclosingFunction() and
  // 确定同一个函数内的“退出点”
  early_return.getEnclosingFunction() = f and
  // 检查从“分配点”到“退出点”是否存在一条执行路径
  alloc_call.getBasicBlock().getASuccessor+() = early_return.getBasicBlock() and
  // 核心逻辑：确认这条路径上没有“释放点”
  // 不存在任何一个“释放点”，它位于“分配点”和“退出点”之间
  not exists(FunctionCall free_call |
    free_call.getTarget().hasGlobalName("finish_mount_kattr") and
    free_call.getEnclosingFunction() = f and
    // “位于之间”的定义是：
    // a) 从“分配点”可以到达“释放点”
    alloc_call.getBasicBlock().getASuccessor*() = free_call.getBasicBlock() and
    // b) 从“释放点”可以到达“退出点”
    free_call.getBasicBlock().getASuccessor*() = early_return.getBasicBlock()
  )
select early_return, alloc_call