import cpp
import semmle.code.cpp.dataflow.TaintTracking
import semmle.code.cpp.dataflow.DataFlow

// 查找COMP_EMPTY宏调用
class CompEmptyMacro extends MacroInvocation {
  CompEmptyMacro() {
    // 匹配COMP_EMPTY()宏调用
    this.getMacroName() = "COMP_EMPTY"
  }
}

// 查找SND_SOC_DAILINK_DEFS宏调用
class DailinkDefsMacro extends MacroInvocation {
  DailinkDefsMacro() {
    this.getMacroName() = "SND_SOC_DAILINK_DEFS"
  }
}

from CompEmptyMacro empty, DailinkDefsMacro dailink
where
  empty.getLocation().getFile().getBaseName() = "mt8195-mt6359.c" and
  dailink.getLocation().getFile().getBaseName() = "mt8195-mt6359.c" and
  // COMP_EMPTY在DAILINK_COMP_ARRAY中使用
  empty.getLocation().getFile() = dailink.getLocation().getFile() and
  // 确保COMP_EMPTY是在DAILINK_COMP_ARRAY内部使用的
  exists(MacroInvocation dailinkArray |
    dailinkArray.getMacroName() = "DAILINK_COMP_ARRAY" and
    dailinkArray.getLocation().getFile() = empty.getLocation().getFile() and
    dailinkArray.getLocation().getStartLine() = empty.getLocation().getStartLine()
  )
select empty