/**
 * @name CVE-2024-58094
 * @description jfs_truncate_nolock() missed a read-only check and could enter the
 *  transactional write path on a read-only filesystem, leading to NULL
 *  dereference in txEnd() (log == NULL) and list corruption in PM QoS paths.
 *  The fix adds isReadOnly(ip) to the early exit condition and uses
 *  xtTruncate(…, COMMIT_WMAP) to avoid write transactions on RO mounts.
 * @kind problem
 * @problem.severity error
 * @precision high
 * @id cpp/jfs-truncate-missing-ro-check
 * @tags
 *  correctness
 *  reliability
 *  filesystem
 *  jfs
 *  read-only
 *  null-dereference
 *  external/cwe/cwe-476
 *  external/cwe/cwe-754
 * @patch-commit f605bc3e162f5c6faa9bd3602ce496053d06a4bb
 * @source-file fs/jfs/inode.c
 * @affected-function jfs_truncate_nolock
 * @vulnerability-type missing-state-check
 * @patch-diff |
 *  diff --git a/fs/jfs/inode.c b/fs/jfs/inode.c
 *  index 07cfdc4405968b…60fc92dee24d20 100644
 *  --- a/fs/jfs/inode.c
 *  +++ b/fs/jfs/inode.c
 *  @@ -369,7 +369,7 @@ void jfs_truncate_nolock(struct inode *ip, loff_t length)
 *
 *    ASSERT(length >= 0);
 *
 *  - if (test_cflag(COMMIT_Nolink, ip)) {
 *  + if (test_cflag(COMMIT_Nolink, ip) || isReadOnly(ip)) {
 *    xtTruncate(0, ip, length, COMMIT_WMAP);
 *    return;
 *  }
 * @references https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/?id=f605bc3e162f5c6faa9bd3602ce496053d06a4bb
 * @remediation Before performing truncate operations that may start a transaction, check for
 *  read-only state (isReadOnly(ip)) and exit via non-transactional path (e.g.,
 *  xtTruncate with COMMIT_WMAP). Avoid accessing transaction log structures when
 *  the filesystem is read-only to prevent NULL dereferences and list corruption.
 */

import cpp

/*
 * 检测JFS文件系统中的只读检查漏洞
 * 该查询用于识别在jfs_truncate_nolock函数中未检查只读模式的情况
 * 这可能导致在只读文件系统上进行截断操作，引发错误
 * This query identifies missing read-only check in jfs_truncate_nolock function
 * which may cause truncation operations on read-only filesystem, leading to errors
 */



from
  FunctionCall xtTruncate, Function jfs_truncate_nolock, IfStmt ifstmt, VariableAccess ip
where
  // 限制在jfs_truncate_nolock函数内
  jfs_truncate_nolock.getName() = "jfs_truncate_nolock" and
  xtTruncate.getTarget().getName() = "xtTruncate" and
  xtTruncate.getEnclosingFunction() = jfs_truncate_nolock and
  ifstmt.getThen() = xtTruncate.getEnclosingBlock() and
  xtTruncate.getArgument(1) = ip and
  // 没有只读检查
  not exists(FunctionCall isReadOnly |
    isReadOnly.getTarget().getName() = "isReadOnly" and
    isReadOnly.getParent*() = ifstmt.getCondition()
  )
select
  xtTruncate,
  "Potential read-only filesystem issue: Missing isReadOnly(ip) check in jfs_truncate_nolock(), may cause truncation on read-only filesystem"
