/**
 * @name CVE-2024-57953
 * @description Detects integer overflows caused by multiplying 32-bit width operands with large
 *  constants defined without a wide integer suffix, leading to overflow on 32-bit
 *  systems (e.g., offset * TICKS_PER_HOUR where TICKS_PER_HOUR is not 64-bit).
 * @kind problem
 * @problem.severity error
 * @precision high
 * @id cpp/integer-overflow-multiplication
 * @tags 
 *  security
 *  correctness
 *  reliability
 *  integer-overflow
 *  external/cwe/cwe-190
 * @patch-commit 53b0c7b15accb18d15d95c7fe68f61630ebfd1ca
 * @source-file drivers/rtc/rtc-tps6594.c
 * @affected-function tps6594_rtc_set_offset
 * @kernel-config N/A
 * @vulnerability-type integer-overflow
 * @patch-diff |
 *  diff --git a/drivers/rtc/rtc-tps6594.c b/drivers/rtc/rtc-tps6594.c
 *  index e696676341378e…7c6246e3f02923 100644
 *  --- a/drivers/rtc/rtc-tps6594.c
 *  +++ b/drivers/rtc/rtc-tps6594.c
 *  @@ -37,7 +37,7 @@
 *   #define MAX_OFFSET (277774)
 *
 *  // Number of ticks per hour
 *  -#define TICKS_PER_HOUR (32768 * 3600)
 *  +#define TICKS_PER_HOUR (32768 * 3600LL)
 *
 *  // Multiplier for ppb conversions
 *   #define PPB_MULT NANO
 * @references https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/?id=53b0c7b15accb18d15d95c7fe68f61630ebfd1ca
 * @remediation Promote operands to a sufficiently wide type before multiplication (e.g., use LL suffix,
 *  cast to 64-bit, or store constants as 64-bit) to avoid overflow on 32-bit builds.
 */



import cpp

from Macro macro
where
  macro.getName() = "TICKS_PER_HOUR" and
  // 检测宏定义中包含乘法操作但没有LL后缀
  macro.getBody().toString().matches("%32768 * 3600%") and
  not macro.getBody().toString().matches("%LL%") and
  not macro.getBody().toString().matches("%ll%")
select macro, "TICKS_PER_HOUR macro defined without LL suffix, may cause integer overflow on 32bit systems"