/**
 * @name CVE-2024-58067
 * @description Detects incorrect error handling of devm_kzalloc() result where IS_ERR() is used
 * instead of a NULL check. devm_kzalloc() returns NULL on failure, so using IS_ERR()
 * can miss allocation failures and propagate invalid pointers, leading to NULL
 * dereferences or incorrect error propagation.
 * @kind problem
 * @problem.severity error
 * @precision high
 * @id cpp/null-vs-is-err-check
 * @tags
 *  security
 *  correctness
 *  reliability
 *  null-dereference
 *  external/cwe/cwe-476
 * @patch-commit 7def56f841af22e07977e193eea002e085facbdb
 * @source-file drivers/clk/mmp/clk-pxa1908-mpmu.c
 * @affected-function pxa1908_mpmu_probe
 * @vulnerability-type null-pointer-dereference
 * @patch-diff |
 *  diff --git a/drivers/clk/mmp/clk-pxa1908-mpmu.c b/drivers/clk/mmp/clk-pxa1908-mpmu.c
 *  index e3337bacaadd5a…90b4b248857406 100644
 *  — a/drivers/clk/mmp/clk-pxa1908-mpmu.c
 *  +++ b/drivers/clk/mmp/clk-pxa1908-mpmu.c
 *  @@ -78,8 +78,8 @@ static int pxa1908_mpmu_probe(struct platform_device *pdev)
 *  struct pxa1908_clk_unit *pxa_unit;
 *
 *  pxa_unit = devm_kzalloc(&pdev->dev, sizeof(*pxa_unit), GFP_KERNEL);
 *  - if (IS_ERR(pxa_unit))
 *  - return PTR_ERR(pxa_unit);
 *  + if (!pxa_unit)
 *  + return -ENOMEM;
 *
 *  pxa_unit->base = devm_platform_ioremap_resource(pdev, 0);
 *  if (IS_ERR(pxa_unit->base))
 * @references https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/commit/?id=7def56f841af22e07977e193eea002e085facbdb
 * @remediation For memory allocation helpers that return NULL on failure (e.g., devm_kzalloc),
 *  always check for NULL instead of using IS_ERR(). On failure, return -ENOMEM (or
 *  handle appropriately) to propagate the error and prevent NULL pointer issues.
 */

import cpp

/*
 * 检测时钟驱动中的NULL vs IS_ERR()错误检查问题
 * 该查询用于识别错误使用IS_ERR()检查devm_kzalloc()返回值的情况
 * devm_kzalloc()返回NULL表示失败，而不是错误指针，应该使用NULL检查
 * This query identifies incorrect usage of IS_ERR() to check devm_kzalloc() return value
 * devm_kzalloc() returns NULL on failure, not error pointers
 */

// 检查是否为pxa1908_mpmu_probe函数
// Check if it's pxa1908_mpmu_probe function
predicate isPxa1908MpmuProbeFunction(Function f) {
  f.getName() = "pxa1908_mpmu_probe"
}

// 检查是否为devm_kzalloc函数调用
// Check if it's devm_kzalloc function call
predicate isDevmKzallocCall(FunctionCall fc) {
  fc.getTarget().getName() = "devm_kzalloc"
}

// 检查是否为IS_ERR函数调用
// Check if it's IS_ERR function call
predicate isIsErrCall(FunctionCall fc) {
  fc.getTarget().getName() = "IS_ERR"
}



// 检查IS_ERR调用是否检查devm_kzalloc的返回值
// Check if IS_ERR call checks devm_kzalloc return value
predicate isIsErrCheckingDevmKzalloc(FunctionCall isErrCall, AssignExpr pxa_unit) {
  pxa_unit.getLValue().toString() = isErrCall.getArgument(0).toString()
}


from
  Function f, FunctionCall devmKzallocCall, FunctionCall isErrCall, AssignExpr pxa_unit  
where
  // 限制在pxa1908_mpmu_probe函数内
  isPxa1908MpmuProbeFunction(f) and
  devmKzallocCall.getEnclosingFunction() = f and
  isErrCall.getEnclosingFunction() = f and
  // 查找devm_kzalloc调用
  isDevmKzallocCall(devmKzallocCall) and
  // 查找IS_ERR调用
  isIsErrCall(isErrCall) and
  // IS_ERR检查的是devm_kzalloc的返回值
  isIsErrCheckingDevmKzalloc(isErrCall, pxa_unit) and
  pxa_unit.getRValue() = devmKzallocCall
select
  isErrCall,
  "Potential NULL vs IS_ERR() bug: devm_kzalloc() returns NULL on failure, not error pointers. Use NULL check instead of IS_ERR()."