/**
 * @name CVE-2025-39755
 * @description Detects outdated pcmcia_driver struct initialization that leads to a NULL pointer dereference.
 *              The legacy `.drv.name` member was used instead of the correct top-level `.name` member,
 *              causing the `.name` field to be NULL. This results in a kernel crash (Oops) when the
 *              driver is registered via `pcmcia_register_driver`.
 * @kind problem
 * @problem.severity error
 * @precision high
 * @id cpp/outdated-struct-initialization
 * @tags security
 *       correctness
 *       denial-of-service
 *       external/cwe/cwe-476
 * @patch-commit c1baf6528bcfd6a86842093ff3f8ff8caf309c12
 * @source-file drivers/staging/gpib/cb7210/cb7210.c
 * @affected-function cb_gpib_cs_driver
 * @kernel-config CONFIG_GPIB_CB7210
 * @vulnerability-type null-pointer-dereference
 * @patch-diff |
 *     @@ -1347,8 +1347,8 @@ static struct pcmcia_device_id cb_pcmcia_ids[] = {
 *      MODULE_DEVICE_TABLE(pcmcia, cb_pcmcia_ids);
 *      
 *      static struct pcmcia_driver cb_gpib_cs_driver = {
 *     +	.name           = "cb_gpib_cs",
 *      	.owner		= THIS_MODULE,
 *     -	.drv = { .name = "cb_gpib_cs", },
 *      	.id_table	= cb_pcmcia_ids,
 *      	.probe		= cb_gpib_probe,
 *      	.remove		= cb_gpib_remove,
 * @references https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2025-39755
 * @remediation
 */

import cpp

/**
 * 表示pcmcia_driver结构体类型
 */
class PcmciaDriverStruct extends Struct {
  PcmciaDriverStruct() {
    this.getName() = "pcmcia_driver"
  }
}

/**
 * 表示pcmcia_driver结构体的初始化表达式
 */
class PcmciaDriverInit extends ClassAggregateLiteral {
  PcmciaDriverInit() {
    this.getType().stripType() instanceof PcmciaDriverStruct
  }

  /**
   * 检查是否存在直接的name字段初始化
   */
  predicate hasDirectNameInit() {
    exists(FieldAccess fa |
      fa = this.getAFieldExpr(_) and
      fa.getTarget().getName() = "name"
    )
  }

  /**
   * 检查是否存在过时的.drv.name初始化方式
   */
  predicate hasDeprecatedDrvNameInit() {
    exists(ClassAggregateLiteral drvInit, FieldAccess nameAccess |
      drvInit = this.getAFieldExpr(_) and
      drvInit.getType().stripType().(Struct).getName() = "device_driver" and
      nameAccess = drvInit.getAFieldExpr(_) and
      nameAccess.getTarget().getName() = "name"
    )
  }

  /**
   * 获取包含此初始化的变量声明
   */
  Variable getInitializedVariable() {
    exists(Initializer init |
      init.getExpr() = this and
      result = init.getDeclaration()
    )
  }
}

/**
 * 检查pcmcia_register_driver函数调用
 */
class PcmciaRegisterDriverCall extends FunctionCall {
  PcmciaRegisterDriverCall() {
    this.getTarget().getName() = "pcmcia_register_driver"
  }
  
  /**
   * 获取传递给注册函数的驱动结构体参数
   */
  Expr getDriverArg() {
    result = this.getArgument(0)
  }
}

from PcmciaDriverInit driverInit, Variable driverVar, PcmciaRegisterDriverCall registerCall
where
  // 驱动初始化使用了过时的.drv.name方式
  driverInit.hasDeprecatedDrvNameInit() and
  // 但没有直接的.name字段初始化
  not driverInit.hasDirectNameInit() and
  // 获取被初始化的变量
  driverVar = driverInit.getInitializedVariable() and
  // 该变量被传递给pcmcia_register_driver函数
  exists(VariableAccess va |
    va = registerCall.getDriverArg() and
    va.getTarget() = driverVar
  )
select driverInit, 
       "PCMCIA驱动 '$@' 使用过时的.drv.name初始化方式，缺少直接的.name字段初始化，" +
       "可能导致在调用 '$@' 时发生空指针解引用。",
       driverVar, driverVar.getName(),
       registerCall, "pcmcia_register_driver"