/**
 * @name CVE-YYYY-NNNNN
 * @description Detects cases where the 'priv' member of a struct nvmem_config is not initialized before being used to register callback functions. This leads to a NULL pointer dereference when the callback functions (e.g., reg_read, reg_write) are invoked, as they receive a NULL context pointer.
 * @kind problem
 * @problem.severity error
 * @precision high
 * @id cpp/kernel/uninitialized-nvmem-context
 * @tags security
 *       correctness
 *       external/cwe/cwe-476
 * @patch-commit 2749444399b1a734e555982845341235b2c73024
 * @source-file drivers/nvmem/zynqmp_nvmem.c
 * @affected-function zynqmp_nvmem_probe
 * @kernel-config CONFIG_NVMEM_ZYNQMP
 * @vulnerability-type null-pointer-dereference
 * @patch-diff |
 *     @@ -213,6 +213,7 @@ static int zynqmp_nvmem_probe(struct platform_device *pdev)
 *      	econfig.word_size = 1;
 *      	econfig.size = ZYNQMP_NVMEM_SIZE;
 *      	econfig.dev = dev;
 *     +	econfig.priv = dev;
 *      	econfig.add_legacy_fixed_of_cells = true;
 *      	econfig.reg_read = zynqmp_nvmem_read;
 *      	econfig.reg_write = zynqmp_nvmem_write;
 * @references https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=2749444399b1a734e555982845341235b2c73024
 * @remediation 
 * @patch-description |
 *     nvmem: zynqmp_nvmem: unbreak driver after cleanup
 *     Commit 29be47fcd6a0 ("nvmem: zynqmp_nvmem: zynqmp_nvmem_probe cleanup")
 *     changed the driver to expect the device pointer to be passed as the
 *     "context", but in nvmem the context parameter comes from nvmem_config.priv
 *     which is never set - Leading to null pointer exceptions when the device is
 *     accessed.
 */

import cpp

from Function f, VariableAccess configAccess
where
  // 定位到目标函数
  f.getName() = "zynqmp_nvmem_probe" and
  f.getFile().getBaseName() = "zynqmp_nvmem.c" and
  
  // 在函数中查找对econfig的访问
  configAccess.getTarget().getName() = "econfig" and
  configAccess.getEnclosingFunction() = f and
  
  // 确保没有对priv字段的赋值
  not exists(FieldAccess privAccess |
    privAccess.getQualifier() = configAccess and
    privAccess.getTarget().getName() = "priv" and
    privAccess.getEnclosingFunction() = f
  )
select configAccess